{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nexport var RoutingReducer = function RoutingReducer(currentState, action) {\n  switch (action.action) {\n    case 'insert':\n      {\n        if (typeof action.index === 'number' && action.screen) {\n          currentState.splice(action.index, 0, action.screen);\n          return _toConsumableArray(currentState);\n        }\n\n        return currentState;\n      }\n\n    case 'append':\n      {\n        if (action.screen) return [].concat(_toConsumableArray(currentState), [action.screen]);\n        return currentState;\n      }\n\n    case 'remove':\n      {\n        if (typeof action.index === 'number' && action.index < currentState.length) {\n          currentState.splice(action.index, 1);\n          return _toConsumableArray(currentState);\n        }\n\n        return currentState;\n      }\n\n    case 'insert-child':\n      {\n        return currentState;\n      }\n\n    case 'remove-child':\n      {\n        return currentState;\n      }\n\n    case 'append-child':\n      {\n        return currentState;\n      }\n  }\n};","map":{"version":3,"sources":["C:/Users/JoshG/OneDrive/Projects/react-navigation-dynamic-drawer/navigation/RoutingReducer.tsx"],"names":["RoutingReducer","currentState","action","index","screen","splice","length"],"mappings":";AAcA,OAAO,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,CAACC,YAAD,EAAmCC,MAAnC,EAA6D;AACvF,UAAQA,MAAM,CAACA,MAAf;AACI,SAAK,QAAL;AAAe;AACX,YAAI,OAAOA,MAAM,CAACC,KAAd,KAAwB,QAAxB,IAAoCD,MAAM,CAACE,MAA/C,EAAuD;AACnDH,UAAAA,YAAY,CAACI,MAAb,CAAoBH,MAAM,CAACC,KAA3B,EAAkC,CAAlC,EAAqCD,MAAM,CAACE,MAA5C;AACA,oCAAWH,YAAX;AACH;;AACD,eAAOA,YAAP;AACH;;AACD,SAAK,QAAL;AAAe;AACX,YAAIC,MAAM,CAACE,MAAX,EACI,oCAAWH,YAAX,IAAyBC,MAAM,CAACE,MAAhC;AACJ,eAAOH,YAAP;AACH;;AACD,SAAK,QAAL;AAAe;AAEX,YAAI,OAAOC,MAAM,CAACC,KAAd,KAAwB,QAAxB,IAAoCD,MAAM,CAACC,KAAP,GAAeF,YAAY,CAACK,MAApE,EAA4E;AACxEL,UAAAA,YAAY,CAACI,MAAb,CAAoBH,MAAM,CAACC,KAA3B,EAAkC,CAAlC;AACA,oCAAWF,YAAX;AACH;;AACD,eAAOA,YAAP;AACH;;AACD,SAAK,cAAL;AAAqB;AACjB,eAAOA,YAAP;AACH;;AACD,SAAK,cAAL;AAAqB;AACjB,eAAOA,YAAP;AACH;;AACD,SAAK,cAAL;AAAqB;AACjB,eAAOA,YAAP;AACH;AA7BL;AA+BH,CAhCM","sourcesContent":["import { NavigationElements, NavigationElement } from './NavigationTypes'\r\n\r\nexport type ReducerActions =\r\n    'insert' | 'remove' | 'append' |\r\n    'insert-child' | 'remove-child' | 'append-child'\r\n\r\nexport type ReducerAction = {\r\n    action: ReducerActions,\r\n    screen?: NavigationElement,\r\n    index?: number,\r\n    name?: string,\r\n    children?: NavigationElements\r\n}\r\n\r\nexport const RoutingReducer = (currentState: NavigationElements, action: ReducerAction) => {\r\n    switch (action.action) {\r\n        case 'insert': {\r\n            if (typeof action.index === 'number' && action.screen) {\r\n                currentState.splice(action.index, 0, action.screen)\r\n                return [...currentState]\r\n            }\r\n            return currentState\r\n        }\r\n        case 'append': {\r\n            if (action.screen)\r\n                return [...currentState, action.screen]\r\n            return currentState\r\n        }\r\n        case 'remove': {\r\n            // requires only type and (index or name)\r\n            if (typeof action.index === 'number' && action.index < currentState.length) {\r\n                currentState.splice(action.index, 1)\r\n                return [...currentState]\r\n            }\r\n            return currentState\r\n        }\r\n        case 'insert-child': {\r\n            return currentState\r\n        }\r\n        case 'remove-child': {\r\n            return currentState\r\n        }\r\n        case 'append-child': {\r\n            return currentState\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}