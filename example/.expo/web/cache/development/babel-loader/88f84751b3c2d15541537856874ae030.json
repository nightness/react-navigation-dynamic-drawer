{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\JoshG\\\\OneDrive\\\\Projects\\\\react-navigation-dynamic-drawer\\\\navigation\\\\DrawerNavigator.tsx\";\n\nimport 'react-native-gesture-handler';\nimport React, { useReducer } from 'react';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { DrawerProvider } from \"../navigation/DrawerContext\";\nimport { DrawerContent } from \"./DrawerContent\";\nimport { RoutingReducer } from \"./RoutingReducer\";\nvar Drawer = createDrawerNavigator();\nexport default (function (_ref) {\n  var initialScreens = _ref.initialScreens,\n      restProps = _objectWithoutProperties(_ref, [\"initialScreens\"]);\n\n  var _useReducer = useReducer(RoutingReducer, initialScreens),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      screens = _useReducer2[0],\n      screensDispatch = _useReducer2[1];\n\n  var iterative = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n  return React.createElement(DrawerProvider, {\n    screens: screens,\n    screensDispatch: screensDispatch,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, React.createElement(Drawer.Navigator, _extends({}, restProps, {\n    drawerContent: function drawerContent(props) {\n      return React.createElement(DrawerContent, _extends({}, props, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 41\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }), screens.map(function (screen) {\n    return React.createElement(React.Fragment, null, React.createElement(Drawer.Screen, {\n      name: screen.name,\n      component: screen.component,\n      initialParams: screen.initialParams,\n      key: \"screen-\" + screen.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 33\n      }\n    }));\n  })));\n});","map":{"version":3,"sources":["C:/Users/JoshG/OneDrive/Projects/react-navigation-dynamic-drawer/navigation/DrawerNavigator.tsx"],"names":["React","useReducer","createDrawerNavigator","DrawerProvider","DrawerContent","RoutingReducer","Drawer","initialScreens","restProps","screens","screensDispatch","iterative","props","map","screen","name","component","initialParams"],"mappings":";;;;;;;AAAA,OAAO,8BAAP;AACA,OAAOA,KAAP,IAA4BC,UAA5B,QAA8C,OAA9C;AAEA,SAASC,qBAAT,QAAsC,0BAAtC;AACA,SAASC,cAAT;AACA,SAASC,aAAT;AACA,SAASC,cAAT;AAIA,IAAMC,MAAM,GAAGJ,qBAAqB,EAApC;AAOA,gBAAe,gBAA6C;AAAA,MAA1CK,cAA0C,QAA1CA,cAA0C;AAAA,MAAvBC,SAAuB;;AAAA,oBAErBP,UAAU,CAACI,cAAD,EAAiBE,cAAjB,CAFW;AAAA;AAAA,MAEjDE,OAFiD;AAAA,MAExCC,eAFwC;;AAGxD,MAAMC,SAAS,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,EAA/B,EAAmC,EAAnC,EAAuC,EAAvC,CAAlB;AAOA,SACI,oBAAC,cAAD;AAAgB,IAAA,OAAO,EAAEF,OAAzB;AAAkC,IAAA,eAAe,EAAEC,eAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD,CAAQ,SAAR,eACQF,SADR;AAEI,IAAA,aAAa,EAAE,uBAAAI,KAAK;AAAA,aAAI,oBAAC,aAAD,eAAmBA,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAJ;AAAA,KAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAKQH,OAAO,CAACI,GAAR,CAAY,UAACC,MAAD,EAAY;AACpB,WACI,0CACI,oBAAC,MAAD,CAAQ,MAAR;AACI,MAAA,IAAI,EAAEA,MAAM,CAACC,IADjB;AAEI,MAAA,SAAS,EAAED,MAAM,CAACE,SAFtB;AAGI,MAAA,aAAa,EAAEF,MAAM,CAACG,aAH1B;AAII,MAAA,GAAG,cAAYH,MAAM,CAACC,IAJ1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AASH,GAVD,CALR,CADJ,CADJ;AAsBH,CAhCD","sourcesContent":["import 'react-native-gesture-handler'\r\nimport React, { useContext, useReducer } from 'react'\r\nimport Collapsible from 'react-native-collapsible'\r\nimport { createDrawerNavigator } from '@react-navigation/drawer'\r\nimport { DrawerProvider } from '../navigation/DrawerContext'\r\nimport { DrawerContent } from './DrawerContent'\r\nimport { RoutingReducer } from './RoutingReducer'\r\nimport { NavigationElements } from './NavigationTypes'\r\nimport { StyleProp, ViewStyle } from 'react-native'\r\n\r\nconst Drawer = createDrawerNavigator()\r\n\r\ninterface Props {\r\n    initialScreens: NavigationElements,\r\n    drawerStyle?: StyleProp<ViewStyle>\r\n}\r\n\r\nexport default ({ initialScreens, ...restProps }: Props) => {\r\n    // The stateful list of screens\r\n    const [screens, screensDispatch] = useReducer(RoutingReducer, initialScreens)\r\n    const iterative = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\r\n\r\n    interface NodeProps {\r\n        screens: NavigationElements,\r\n        depth?: number\r\n    }\r\n\r\n    return (\r\n        <DrawerProvider screens={screens} screensDispatch={screensDispatch}>\r\n            <Drawer.Navigator\r\n                {...restProps}\r\n                drawerContent={props => <DrawerContent {...props} />}\r\n            >\r\n                {\r\n                    screens.map((screen) => {\r\n                        return (\r\n                            <>\r\n                                <Drawer.Screen\r\n                                    name={screen.name}\r\n                                    component={screen.component}\r\n                                    initialParams={screen.initialParams}\r\n                                    key={`screen-${screen.name}`} />\r\n                            </>\r\n                        )\r\n                    })\r\n                }\r\n            </Drawer.Navigator>\r\n        </DrawerProvider>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}