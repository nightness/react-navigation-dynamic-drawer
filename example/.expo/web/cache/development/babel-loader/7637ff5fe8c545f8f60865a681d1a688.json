{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\JoshG\\\\OneDrive\\\\Projects\\\\react-navigation-dynamic-drawer\\\\navigation\\\\DrawerNavigator.tsx\";\n\nimport 'react-native-gesture-handler';\nimport React, { useReducer } from 'react';\nimport { createDrawerNavigator, DrawerContentScrollView } from '@react-navigation/drawer';\nimport { DrawerProvider } from \"../navigation/DrawerContext\";\nimport { DrawerContent } from \"./DrawerContent\";\nimport { ScreensReducer } from \"./RoutingReducer\";\nvar Drawer = createDrawerNavigator();\nexport default (function (_ref) {\n  var initialScreens = _ref.initialScreens,\n      restProps = _objectWithoutProperties(_ref, [\"initialScreens\"]);\n\n  var _useReducer = useReducer(ScreensReducer, initialScreens),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      screens = _useReducer2[0],\n      screensDispatch = _useReducer2[1];\n\n  return React.createElement(DrawerProvider, {\n    screens: screens,\n    screensDispatch: screensDispatch,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, React.createElement(Drawer.Navigator, _extends({}, restProps, {\n    drawerContent: function drawerContent(props) {\n      return React.createElement(DrawerContent, _extends({}, props, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 41\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }), screens.map(function (screen) {\n    console.log(screen.name);\n    return React.createElement(DrawerContentScrollView, {\n      bounces: false,\n      scrollEnabled: false,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }\n    }, React.createElement(Drawer.Screen, {\n      name: screen.name,\n      component: screen.component,\n      initialParams: screen.initialParams,\n      key: \"root-\" + screen.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 29\n      }\n    }));\n  })));\n});","map":{"version":3,"sources":["C:/Users/JoshG/OneDrive/Projects/react-navigation-dynamic-drawer/navigation/DrawerNavigator.tsx"],"names":["React","useReducer","createDrawerNavigator","DrawerContentScrollView","DrawerProvider","DrawerContent","ScreensReducer","Drawer","initialScreens","restProps","screens","screensDispatch","props","map","screen","console","log","name","component","initialParams"],"mappings":";;;;;;;AAAA,OAAO,8BAAP;AACA,OAAOA,KAAP,IAA4BC,UAA5B,QAA8C,OAA9C;AAEA,SAASC,qBAAT,EAAgCC,uBAAhC,QAA+D,0BAA/D;AACA,SAASC,cAAT;AACA,SAASC,aAAT;AACA,SAASC,cAAT;AAIA,IAAMC,MAAM,GAAGL,qBAAqB,EAApC;AAOA,gBAAe,gBAA6C;AAAA,MAA1CM,cAA0C,QAA1CA,cAA0C;AAAA,MAAvBC,SAAuB;;AAAA,oBAErBR,UAAU,CAACK,cAAD,EAAiBE,cAAjB,CAFW;AAAA;AAAA,MAEjDE,OAFiD;AAAA,MAExCC,eAFwC;;AAIxD,SACI,oBAAC,cAAD;AAAgB,IAAA,OAAO,EAAED,OAAzB;AAAkC,IAAA,eAAe,EAAEC,eAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD,CAAQ,SAAR,eACQF,SADR;AAEI,IAAA,aAAa,EAAE,uBAAAG,KAAK;AAAA,aAAI,oBAAC,aAAD,eAAmBA,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAJ;AAAA,KAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAIKF,OAAO,CAACG,GAAR,CAAY,UAACC,MAAD,EAAY;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAnB;AACA,WACI,oBAAC,uBAAD;AAAyB,MAAA,OAAO,EAAE,KAAlC;AAAyC,MAAA,aAAa,EAAE,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD,CAAQ,MAAR;AACI,MAAA,IAAI,EAAEH,MAAM,CAACG,IADjB;AAEI,MAAA,SAAS,EAAEH,MAAM,CAACI,SAFtB;AAGI,MAAA,aAAa,EAAEJ,MAAM,CAACK,aAH1B;AAII,MAAA,GAAG,YAAUL,MAAM,CAACG,IAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AASH,GAXA,CAJL,CADJ,CADJ;AAqBH,CAzBD","sourcesContent":["import 'react-native-gesture-handler'\r\nimport React, { useContext, useReducer } from 'react'\r\nimport Collapsible from 'react-native-collapsible'\r\nimport { createDrawerNavigator, DrawerContentScrollView } from '@react-navigation/drawer'\r\nimport { DrawerProvider } from '../navigation/DrawerContext'\r\nimport { DrawerContent } from './DrawerContent'\r\nimport { ScreensReducer } from './RoutingReducer'\r\nimport { NavigationElements } from './NavigationTypes'\r\nimport { StyleProp, ViewStyle } from 'react-native'\r\n\r\nconst Drawer = createDrawerNavigator()\r\n\r\ninterface Props {\r\n    initialScreens: NavigationElements,\r\n    drawerStyle?: StyleProp<ViewStyle>\r\n}\r\n\r\nexport default ({ initialScreens, ...restProps }: Props) => {\r\n    // The stateful list of screens\r\n    const [screens, screensDispatch] = useReducer(ScreensReducer, initialScreens)\r\n\r\n    return (\r\n        <DrawerProvider screens={screens} screensDispatch={screensDispatch}>\r\n            <Drawer.Navigator\r\n                {...restProps}\r\n                drawerContent={props => <DrawerContent {...props} />}>\r\n                {/* Root nodes */}\r\n                {screens.map((screen) => {\r\n                    console.log(screen.name)\r\n                    return (\r\n                        <DrawerContentScrollView bounces={false} scrollEnabled={false}>\r\n                            <Drawer.Screen\r\n                                name={screen.name}\r\n                                component={screen.component}\r\n                                initialParams={screen.initialParams}\r\n                                key={`root-${screen.name}`} />\r\n                        </DrawerContentScrollView>\r\n                    )\r\n                })}\r\n            </Drawer.Navigator>\r\n        </DrawerProvider>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}