{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var ScreensReducer = function ScreensReducer(currentState, action) {\n  var index = typeof action.index === 'number' && action.index >= 0 && action.index < currentState.length ? action.index : -1;\n\n  switch (action.type) {\n    case 'insert':\n      {\n        if (index != -1 && index < currentState.length && action.screen) {\n          currentState.splice(index, 0, action.screen);\n          return _toConsumableArray(currentState);\n        }\n\n        return currentState;\n      }\n\n    case 'append':\n      {\n        if (action.screen) return [].concat(_toConsumableArray(currentState), [action.screen]);\n        return currentState;\n      }\n\n    case 'remove':\n      {\n        var indexDepth = currentState[index].depth;\n        var length = 1;\n\n        for (var i = index + 1; i < currentState.length; i++) {\n          if (currentState[i].depth === indexDepth) break;\n          length++;\n        }\n\n        if (index != -1) {\n          currentState.splice(index, length);\n          return _toConsumableArray(currentState);\n        }\n\n        return currentState;\n      }\n\n    case 'hide':\n      {\n        if (index != -1 && index < currentState.length) {\n          currentState[index].isHidden = false;\n          return _objectSpread({}, currentState);\n        }\n\n        return currentState;\n      }\n\n    case 'show':\n      {\n        if (index != -1 && index < currentState.length) {\n          currentState[index].isHidden = true;\n          return _objectSpread({}, currentState);\n        }\n\n        return currentState;\n      }\n\n    case 'collapse':\n      {\n        if (index != -1 && index < currentState.length) {\n          currentState[index].isCollapsed = true;\n          return _objectSpread({}, currentState);\n        }\n\n        return currentState;\n      }\n\n    case 'expand':\n      {\n        if (index != -1 && index < currentState.length) {\n          currentState[index].isCollapsed = false;\n          return _objectSpread({}, currentState);\n        }\n\n        return currentState;\n      }\n\n    case 'rename':\n      {\n        if (index != -1 && index < currentState.length && action.name) {\n          currentState[index].label = action.name;\n          return _objectSpread({}, currentState);\n        }\n\n        return currentState;\n      }\n  }\n};","map":{"version":3,"sources":["C:/Users/JoshG/OneDrive/Projects/react-navigation-dynamic-drawer/navigation/RoutingReducer.tsx"],"names":["ScreensReducer","currentState","action","index","length","type","screen","splice","indexDepth","depth","i","isHidden","isCollapsed","name","label"],"mappings":"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","sourcesContent":["import { NavigationElements, NavigationElement } from './NavigationTypes'\r\n\r\nexport type ScreenActions =\r\n    'insert' | 'remove' | 'append' | 'hide' | 'show' | 'collapse' | 'expand' | 'rename'\r\n\r\nexport type ScreenAction = {\r\n    type: ScreenActions,\r\n    screen?: NavigationElement,\r\n    index?: number,\r\n    name?: string,\r\n}\r\n\r\nexport const ScreensReducer = (currentState: NavigationElements, action: ScreenAction) => {\r\n    const index = typeof action.index === 'number' && \r\n        action.index >= 0 && action.index < currentState.length ? action.index : -1\r\n    switch (action.type) {\r\n        case 'insert': {\r\n            if (index != -1 && index < currentState.length && action.screen) {\r\n                currentState.splice(index, 0, action.screen)\r\n                return [...currentState]\r\n            }\r\n            return currentState\r\n        }\r\n        case 'append': {\r\n            if (action.screen)\r\n                return [...currentState, action.screen]\r\n            return currentState\r\n        }\r\n        case 'remove': {\r\n            // TODO: Need to remove all children too\r\n            const indexDepth = currentState[index].depth\r\n            let length = 1\r\n            for (let i = index + 1; i < currentState.length; i++) {\r\n                if (currentState[i].depth === indexDepth) break\r\n                length++\r\n            }\r\n            if (index != -1) {\r\n                currentState.splice(index, length)\r\n                return [...currentState]\r\n            }\r\n            return currentState\r\n        }\r\n        case 'hide': {\r\n            if (index != -1 && index < currentState.length) {\r\n                currentState[index].isHidden = false\r\n                return {...currentState}\r\n            }\r\n            return currentState\r\n        }\r\n        case 'show': {\r\n            if (index != -1 && index < currentState.length) {\r\n                currentState[index].isHidden = true\r\n                return {...currentState}\r\n            }\r\n            return currentState\r\n        }\r\n        case 'collapse': {\r\n            if (index != -1 && index < currentState.length) {\r\n                currentState[index].isCollapsed = true\r\n                return {...currentState}\r\n            }\r\n            return currentState\r\n        }\r\n        case 'expand': {\r\n            if (index != -1 && index < currentState.length) {\r\n                currentState[index].isCollapsed = false\r\n                return {...currentState}\r\n            }\r\n            return currentState\r\n        }\r\n        case 'rename': {\r\n            if (index != -1 && index < currentState.length && action.name) {\r\n                currentState[index].label = action.name\r\n                return {...currentState}\r\n            }\r\n            return currentState\r\n        }        \r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}